{"version":3,"sources":["components/NavBar/NavBar.js","components/NavBar/index.js","components/Graph/Graph.js","components/SixDegreesForm/SixDegreesForm.js","components/SixDegreesForm/index.js","components/InputField/InputField.js","components/InputField/index.js","components/Button/Button.js","components/Button/index.js","components/Icon/Icon.js","components/Icon/index.js","components/TeammatesForm/TeammatesForm.js","components/TeammatesForm/index.js","components/Body/Body.js","components/Body/index.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Container","Row","Col","sm","md","lg","to","id","activeClassName","vertices","require","i2n","n2i","vert_objs","fuzzysort","g","name","this","id_to_name","name_to_id","names","players","push","isPlayer","searchName","category","Math","floor","random","length","input","coll","collection","amount","teams","inColl","includes","res","go","limit","threshold","Infinity","allowTypo","arr","r","target","sourceId","teammates","visited","queue","path","shift","node","neighbors","neighbor","newPath","slice","idx","indexOf","splice","targetId","SixDegreesForm","useState","pathRes","setPathRes","playerOne","setPlayerOne","playerTwo","setPlayerTwo","get_random_player","setFunc","fetch","method","headers","then","json","data","player","onSubmit","e","preventDefault","id1","player1","value","id2","player2","console","time","timeEnd","forEach","map","item","key","htmlFor","type","onChange","onClick","InputField","inputId","label","setValueFunc","focused","setFocused","activeIdx","setActiveIdx","suggestions","setSuggestions","textInput","setTextInput","setInput","AutocompleteList","style","borderBottom","i","onMouseDown","handleTeammatesInputChange","searchQuery","bestNames","borderRadius","onFocus","onBlur","onKeyDown","calcIdx","newIdx","calcInput","version","xmlns","x","y","viewBox","playerName","randomName","d","Button","props","submit","types","Icon","TeammatesForm","setTeammates","setValue","dispValue","setDispValue","corrected","setCorrected","invSearch","setInvSearch","listToggle","setListToggle","TeammatesReturnDiv","fill","height","autoComplete","teammateRes","getTeammates","Body","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f72e6d01.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavBar.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction NavBar() {\n  return (\n    <div className=\"nav-bar\">\n      <Container>\n        <Row>\n          <Col sm={0} md={3} lg={4} className=\"home-link-group\">\n            <NavLink className=\"nav-link home-link\" to=\"/\">\n              <span className=\"home-link-text\">NFL Projects</span>\n            </NavLink>\n          </Col>\n          <Col sm={12} md={9} lg={8}>\n            <div id=\"nav-link-group\">\n              <NavLink\n                activeClassName=\"active-link\"\n                className=\"nav-link\"\n                to=\"/six-degrees\"\n              >\n                Six Degrees of Separation\n                {/* <span className=\"nav-link-text\">Six Degrees of Separation</span> */}\n              </NavLink>\n              <NavLink\n                activeClassName=\"active-link\"\n                className=\"nav-link\"\n                to=\"/teammates\"\n              >\n                Teammates\n                {/* <span className=\"nav-link-text\">Teammates</span> */}\n              </NavLink>\n              <NavLink\n                activeClassName=\"active-link\"\n                className=\"nav-link\"\n                to=\"/height-and-weight\"\n              >\n                Height and Weight\n                {/* <span className=\"nav-link-text\">Height and Weight</span> */}\n              </NavLink>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import NavBar from \"./NavBar\";\nexport default NavBar;\n","const vertices = require(\"./graph.json\");\nconst i2n = require(\"./id_to_name.json\");\nconst n2i = require(\"./name_to_id.json\");\nconst vert_objs = require(\"./vert_objs.json\");\nconst fuzzysort = require(\"fuzzysort\");\n\nclass Graph {\n  constructor(vertices, i2n, n2i, vert_objs) {\n    this.vertices = vertices;\n    this.id_to_name = i2n;\n    this.name_to_id = n2i;\n    this.vert_objs = vert_objs;\n    this.names = [];\n    this.players = [];\n\n    for (const name in n2i) {\n      this.names.push(name);\n    }\n\n    for (const id in vert_objs) {\n      if (vert_objs[id].isPlayer) {\n        this.players.push(vert_objs[id].searchName);\n      }\n    }\n  }\n\n  // Return a random item (either name or player)\n  randomName(category) {\n    if (category === \"players\") {\n      return this.players[Math.floor(Math.random() * this.players.length)];\n    } else if (category === \"teams\") {\n      return \"Not yet implemented\";\n    } else if (category === \"all\") {\n      return this.names[Math.floor(Math.random() * this.names.length)];\n    } else {\n      return \"Error\";\n    }\n  }\n\n  // Returns the closest matching names of all\n  bestNames(input, coll, amount = 20) {\n    let collection;\n    switch (coll) {\n      case \"all\":\n        collection = this.names;\n        break;\n      case \"players\":\n        collection = this.players;\n        break;\n      case \"teams\":\n        collection = this.teams;\n        break;\n      default:\n        collection = [];\n    }\n\n    const inColl = collection.includes(input);\n\n    const res = fuzzysort.go(input, collection, {\n      limit: amount,\n      threshold: inColl ? -100 : -Infinity,\n      allowTypo: true,\n    });\n    const arr = [];\n    for (const r of res) {\n      arr.push(r.target);\n    }\n    return arr;\n  }\n\n  getTeammates(sourceId) {\n    // Handle case where either of them doesn't exist in the graph\n    if (!sourceId) {\n      return [];\n    }\n\n    const teammates = [];\n    const visited = []; // Tracks visited vertices\n    const queue = [[sourceId]]; // Vertices to visit\n\n    while (queue.length > 0) {\n      let path = queue.shift();\n      let node = path[path.length - 1];\n\n      // If the node was visited already, can skip\n      // Might not need this for the teammate one\n      if (!visited.includes(node)) {\n        let neighbors = this.vertices[node];\n\n        // Case where two nodes are already in the path, the original player and the team. Means the third node\n        // about to be added must be a teammate\n        if (path.length === 2) {\n          for (const neighbor of neighbors) {\n            if (!teammates.includes(neighbor)) {\n              teammates.push(neighbor);\n            }\n          }\n        } else {\n          // Loop to iterate over the neighbors of the node\n          for (const neighbor of neighbors) {\n            let newPath = path.slice();\n            newPath.push(neighbor);\n            queue.push(newPath);\n          }\n          visited.push(node);\n        }\n      }\n    }\n\n    // Remove the sourceId from the teammates\n    const idx = teammates.indexOf(sourceId);\n    if (idx > -1) {\n      teammates.splice(idx, 1);\n    }\n    return teammates;\n  }\n\n  path(sourceId, targetId) {\n    // Handle case where either of them doesn't exist in the graph\n    if (!sourceId || !targetId) {\n      return [];\n    }\n\n    // Edge case where they're the same\n    if (sourceId === targetId) {\n      return [sourceId];\n    }\n\n    const visited = []; // Tracks visited vertices\n    const queue = [[sourceId]]; // Vertices to visit\n\n    while (queue.length > 0) {\n      let path = queue.shift();\n      let node = path[path.length - 1];\n\n      // If the node was visited already, can skip\n      if (!visited.includes(node)) {\n        let neighbors = this.vertices[node];\n\n        // Loop to iterate over the neighbors of the node\n        for (const neighbor of neighbors) {\n          let newPath = path.slice();\n          newPath.push(neighbor);\n          queue.push(newPath);\n\n          // Check if the neighbor node is the goal\n          if (neighbor === targetId) {\n            return newPath;\n          }\n        }\n        visited.push(node);\n      }\n    }\n    // Condition when the nodes are not connected\n    return [];\n  }\n}\n\nconst g = new Graph(vertices, i2n, n2i, vert_objs);\n\nexport default g;\n","import React, { useState } from \"react\";\nimport g from \"../Graph/Graph\";\n\nfunction SixDegreesForm() {\n  const [pathRes, setPathRes] = useState(null);\n\n  const [playerOne, setPlayerOne] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(\"\");\n\n  function handleSubmit2(e) {\n    e.preventDefault(); // Default behavior is to refresh page, we don't want that\n    const id1 = g.name_to_id[e.target.player1.value];\n    const id2 = g.name_to_id[e.target.player2.value];\n\n    // If either is undefined, this won't happen\n    console.time(\"path\");\n    let path = g.path(id1, id2);\n    console.timeEnd(\"path\");\n\n    path.forEach((node, idx) => {\n      path[idx] = g.id_to_name[node];\n    });\n\n    // Covers potential cases if no path has been found\n    if (path.length === 0) {\n      setPathRes(\n        <p>\n          No path found. Double check that the inputs are exactly as they are on\n          PFR's website. If so, then it's possible there simply is no path\n          between the players.\n        </p>\n      );\n      // Otherwise returns the paths in a list format (could update later to make it look better)\n    } else {\n      setPathRes(path.map((item) => <li key={`path-item-${item}`}>{item}</li>));\n    }\n  }\n\n  function get_random_player(setFunc) {\n    fetch(\"/api/get_random_player\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setFunc(data.player);\n      });\n  }\n\n  return (\n    <div>\n      <h1>Six Degrees of Separation</h1>\n      <p>\n        Search any two players and see how they're linked by mutual teammates!\n      </p>\n      <form onSubmit={handleSubmit2}>\n        <label htmlFor=\"player1\">Player 1:</label>\n        <input\n          type=\"text\"\n          id=\"player1\"\n          name=\"player1\"\n          value={playerOne}\n          onChange={(e) => setPlayerOne(e.target.value)}\n        />\n        <button type=\"button\" onClick={() => get_random_player(setPlayerOne)}>\n          Random\n        </button>\n        <br /> {/* Rename these ids later */}\n        <label htmlFor=\"player2\">Player 2:</label>\n        <input\n          type=\"text\"\n          id=\"player2\"\n          name=\"player2\"\n          value={playerTwo}\n          onChange={(e) => setPlayerTwo(e.target.value)}\n        />\n        <button type=\"button\" onClick={() => get_random_player(setPlayerTwo)}>\n          Random\n        </button>\n        <br />\n        <input type=\"submit\" value=\"Submit\" />\n        <br />\n      </form>\n      <ul>{pathRes}</ul>\n    </div>\n  );\n}\n\nexport default SixDegreesForm;\n","import SixDegreesForm from './SixDegreesForm.js';\nexport default SixDegreesForm;","import React, { useState } from \"react\";\nimport \"./InputField.scss\";\nimport g from \"../Graph/Graph\";\n\nfunction InputField({ inputId, label, setValueFunc }) {\n  const [focused, setFocused] = useState(false);\n  const [activeIdx, setActiveIdx] = useState(0);\n  const [suggestions, setSuggestions] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n  const [input, setInput] = useState(\"\"); // Will want to rename this to value\n\n  const AutocompleteList = () => {\n    return !focused ? null : (\n      <div\n        id=\"autocomplete-list\"\n        className=\"autocomplete-items\"\n        style={{ borderBottom: suggestions.length ? null : \"none\" }}\n      >\n        {suggestions.map(function (item, i) {\n          return (\n            <div\n              className={activeIdx === i ? \"autocomplete-active\" : null}\n              // Prevents the bottom item to have a double border conflicting with the container\n              style={{\n                borderBottom: i === suggestions.length - 1 ? \"none\" : null,\n              }}\n              key={i}\n              // onMouseDown prevents default to stop the form from blurring before onClick can activate\n              onMouseDown={(e) => {\n                e.preventDefault();\n              }}\n              onClick={() => {\n                setInput(item);\n                setValueFunc(item);\n                setFocused(false);\n                setActiveIdx(-1);\n              }}\n            >\n              {item}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  function handleTeammatesInputChange(searchQuery) {\n    setSuggestions(g.bestNames(searchQuery, \"players\"));\n  }\n\n  return (\n    <div className=\"autoComplete\">\n      <div className=\"temp-div\">\n        <label htmlFor={inputId}>{label}</label>\n        <input\n          type=\"text\"\n          id={inputId}\n          name={inputId}\n          className=\"input-class\"\n          value={input}\n          style={{\n            borderRadius:\n              focused && suggestions.length !== 0 ? \"4px 4px 0 0\" : \"4px\",\n          }}\n          onFocus={() => {\n            setFocused(true);\n          }}\n          onBlur={() => {\n            setFocused(false);\n            setActiveIdx(-1);\n          }}\n          onChange={(e) => {\n            setFocused(true);\n            setActiveIdx(-1);\n            setInput(e.target.value);\n            setValueFunc(e.target.value);\n            setTextInput(e.target.value);\n            handleTeammatesInputChange(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            if (focused) {\n              if (e.key === \"ArrowUp\") {\n                e.preventDefault();\n                const calcIdx =\n                  activeIdx <= -1 ? suggestions.length - 1 : activeIdx - 1;\n                setActiveIdx(calcIdx);\n                // Set inputs\n                const newIdx =\n                  activeIdx === -1 ? suggestions.length - 1 : activeIdx - 1;\n                setInput(newIdx !== -1 ? suggestions[newIdx] : textInput);\n                setValueFunc(newIdx !== -1 ? suggestions[newIdx] : textInput);\n              } else if (e.key === \"ArrowDown\") {\n                const calcIdx =\n                  activeIdx >= suggestions.length - 1 ? -1 : activeIdx + 1;\n                setActiveIdx(calcIdx);\n                const calcInput =\n                  activeIdx < suggestions.length - 1\n                    ? suggestions[(activeIdx + 1) % suggestions.length]\n                    : textInput;\n                setInput(calcInput);\n                setValueFunc(calcInput);\n              } else if (e.key === \"Enter\") {\n                if (activeIdx !== -1) {\n                  e.preventDefault();\n                  setInput(suggestions[activeIdx]);\n                  setFocused(false);\n                  setActiveIdx(-1);\n                }\n              }\n            }\n          }}\n        />\n        <AutocompleteList />\n      </div>\n      <div className=\"svg-container\">\n        <svg\n          version=\"1.1\"\n          id=\"Capa_1\"\n          className=\"random-input-icon\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          x=\"0px\"\n          y=\"0px\"\n          viewBox=\"0 0 230.055 230.055\"\n          onClick={() => {\n            const playerName = g.randomName(\"players\");\n            setInput(playerName);\n            setTextInput(playerName);\n            setValueFunc(playerName);\n            handleTeammatesInputChange(playerName);\n          }}\n        >\n          <path\n            d=\"M199.419,124.497c-3.516-3.515-9.213-3.515-12.729,0c-3.515,3.515-3.515,9.213,0,12.728l12.637,12.636h-8.406 c-8.177,0-16.151-2.871-22.453-8.083l-32.346-26.751l32.345-26.751c6.303-5.212,14.277-8.083,22.454-8.083h8.406L186.69,92.83\n\t              c-3.515,3.515-3.515,9.213,0,12.728c1.758,1.757,4.061,2.636,6.364,2.636s4.606-0.879,6.364-2.636l28-28\n\t              c3.515-3.515,3.515-9.213,0-12.728l-28-28c-3.516-3.515-9.213-3.515-12.729,0c-3.515,3.515-3.515,9.213,0,12.728l12.637,12.636\n                h-8.406c-12.354,0-24.403,4.337-33.926,12.211L122,103.348L82.564,70.733c-6.658-5.507-15.084-8.54-23.724-8.54H9\n                c-4.971,0-9,4.029-9,9s4.029,9,9,9h49.841c4.462,0,8.813,1.566,12.252,4.411l36.786,30.423L71.094,145.45\n                c-3.439,2.844-7.791,4.411-12.253,4.411H9c-4.971,0-9,4.029-9,9s4.029,9,9,9h49.841c8.64,0,17.065-3.033,23.725-8.54L122,126.707\n                l34.996,28.943c9.521,7.875,21.57,12.211,33.925,12.211h8.406l-12.637,12.636c-3.515,3.515-3.515,9.213,0,12.728\n                c1.758,1.757,4.061,2.636,6.364,2.636s4.606-0.879,6.364-2.636l28-28c3.515-3.515,3.515-9.213,0-12.728L199.419,124.497z\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default InputField;\n","import InputField from \"./InputField.js\";\nexport default InputField;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nfunction Button(props) {\n  return (\n    <input\n      className=\"jb-button\"\n      type={props.submit ? \"submit\" : null}\n      value={props.value}\n    />\n  );\n}\n\nexport default Button;\n","import Button from \"./Button\";\nexport default Button;\n","import React from \"react\";\nconst types = require(\"./types.json\");\n\nfunction Icon(props) {\n  const path = types[props.type];\n  if (!path) {\n    return null;\n  }\n  return (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\" style={props.style || null}>\n      <path d={path} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import Icon from \"./Icon.js\";\nexport default Icon;\n","import React, { useState } from \"react\";\nimport g from \"../Graph/Graph\";\nimport \"./TeammatesForm.scss\";\nimport InputField from \"../InputField\";\nimport Button from \"../Button\";\nimport Icon from \"../Icon\";\n\nfunction TeammatesForm() {\n  const [teammates, setTeammates] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [dispValue, setDispValue] = useState(\"\");\n  const [corrected, setCorrected] = useState(true);\n  const [invSearch, setInvSearch] = useState(false);\n  const [listToggle, setListToggle] = useState(false);\n\n  function handleTeammatesForm(e) {\n    e.preventDefault(); // Default behavior is to refresh page, we don't want that\n    setCorrected(false);\n    setInvSearch(false);\n    setListToggle(false);\n    let id;\n    if (!g.players.includes(value)) {\n      const res = g.bestNames(value, \"players\", 1);\n      if (!res.length) {\n        setInvSearch(true);\n        return;\n      }\n      setCorrected(true);\n      id = g.name_to_id[res[0]];\n      setDispValue(res[0]);\n    } else {\n      id = g.name_to_id[value];\n      setDispValue(value);\n    }\n\n    const teammateRes = g.getTeammates(id);\n    teammateRes.forEach((id, idx) => {\n      teammateRes[idx] = g.id_to_name[id];\n    });\n    setTeammates(teammateRes);\n  }\n\n  const TeammatesReturnDiv = () => {\n    if (invSearch) {\n      return (\n        <div>\n          <p>\n            Sorry, we weren't able to find anyone with that name, please double\n            check the input.\n          </p>\n        </div>\n      );\n    } else if (!teammates.length) {\n      return null;\n    }\n    return (\n      <div>\n        {corrected && (\n          <p>\n            Did you mean <strong>{dispValue}</strong>?\n          </p>\n        )}\n        <p>\n          <strong>{dispValue}</strong> has been on a roster with{\" \"}\n          <strong>{teammates.length}</strong> unique people.\n        </p>\n        <p\n          id=\"toggle-paragraph\"\n          onClick={() => {\n            setListToggle(!listToggle);\n          }}\n        >\n          Click here to {listToggle ? \"hide\" : \"show\"} all the teammates{\" \"}\n          <Icon\n            type={listToggle ? \"UpArrow\" : \"DownArrow\"}\n            style={{ fill: \"#333333\", height: \"18px\" }}\n          />\n        </p>\n        {listToggle &&\n          teammates.map(function (item, i) {\n            return <li key={i}>{item}</li>;\n          })}\n      </div>\n    );\n  };\n\n  const props = {\n    inputId: \"player\",\n    label: \"Player\",\n    setValueFunc: setValue,\n  };\n\n  return (\n    <div id=\"teammates-form\">\n      <h1 className=\"hero-title\">Teammates</h1>\n      <p>\n        Search up any player and hit submit to see all of the people they've\n        been on a roster with!\n      </p>\n      <form autoComplete=\"off\" onSubmit={handleTeammatesForm}>\n        <div className=\"input-field-group\">\n          <InputField {...props} />\n        </div>\n        <Button submit value=\"Submit\" />\n      </form>\n      <TeammatesReturnDiv />\n    </div>\n  );\n}\n\nexport default TeammatesForm;\n","import TeammatesForm from './TeammatesForm';\nexport default TeammatesForm;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./Body.scss\";\nimport SixDegreesForm from \"../SixDegreesForm\";\nimport TeammatesForm from \"../TeammatesForm\";\n\nfunction Body() {\n  return (\n    <div id=\"body-wrapper\">\n      <div id=\"inner-body\">\n        <Switch>\n          <Route exact path=\"/\">\n            <h1>Home</h1>\n          </Route>\n          <Route path=\"/six-degrees\">\n            <SixDegreesForm />\n          </Route>\n          <Route path=\"/teammates\">\n            <TeammatesForm />\n          </Route>\n          <Route path=\"/height-and-weight\">\n            <h1>Under Construction!</h1>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","import Body from \"./Body\";\nexport default Body;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport NavBar from \"./components/NavBar\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Body />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}